#!/usr/bin/env node

/**
 * Script de importaci√≥n para datos reales de empleados
 * Generado por process-real-employee-data.js
 */

const { createClient } = require('@supabase/supabase-js');
const fs = require('fs');
const path = require('path');

// Cargar variables de entorno
require('dotenv').config();

console.log('üöÄ IMPORTANDO DATOS REALES DE EMPLEADOS');
console.log('='.repeat(50));

// Verificar variables de entorno
if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.SUPABASE_SERVICE_ROLE_KEY) {
  console.error('‚ùå Error: Variables de entorno requeridas no encontradas');
  console.error('   - NEXT_PUBLIC_SUPABASE_URL');
  console.error('   - SUPABASE_SERVICE_ROLE_KEY');
  process.exit(1);
}

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
);

async function importRealData() {
  try {
    console.log('üì¶ Importando empresas...');
    const companiesData = JSON.parse(fs.readFileSync(path.join(__dirname, 'companies.json'), 'utf8'));
    const { data: companies, error: companiesError } = await supabase
      .from('companies')
      .upsert(companiesData, { onConflict: 'id' });
    
    if (companiesError) throw companiesError;
    console.log(`‚úÖ Companies importadas: ${companies.length}`);
    
    console.log('üì¶ Importando departamentos...');
    const departmentsData = JSON.parse(fs.readFileSync(path.join(__dirname, 'departments.json'), 'utf8'));
    const { data: departments, error: departmentsError } = await supabase
      .from('departments')
      .upsert(departmentsData, { onConflict: 'id' });
    
    if (departmentsError) throw departmentsError;
    console.log(`‚úÖ Departments importados: ${departments.length}`);
    
    console.log('üì¶ Importando empleados reales...');
    const employeesData = JSON.parse(fs.readFileSync(path.join(__dirname, 'employees.json'), 'utf8'));
    const { data: employees, error: employeesError } = await supabase
      .from('employees')
      .upsert(employeesData, { onConflict: 'id' });
    
    if (employeesError) throw employeesError;
    console.log(`‚úÖ Employees importados: ${employees.length}`);
    
    console.log('\nüéâ IMPORTACI√ìN DE DATOS REALES COMPLETADA');
    console.log('='.repeat(50));
    console.log('üìä Resumen:');
    console.log(`   - Empresas: ${companies.length}`);
    console.log(`   - Departamentos: ${departments.length}`);
    console.log(`   - Empleados: ${employees.length}`);
    console.log('\n‚úÖ Los datos reales est√°n listos para usar en la aplicaci√≥n');
    
  } catch (error) {
    console.error('‚ùå Error en importaci√≥n:', error.message);
    console.error('\nüí° Soluci√≥n:');
    console.error('1. Verifica que las migraciones est√©n aplicadas: supabase db push');
    console.error('2. Verifica las variables de entorno');
    console.error('3. Verifica la conexi√≥n a Supabase');
    process.exit(1);
  }
}

importRealData();
