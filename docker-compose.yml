
services:
  postgres:
    image: postgres:17
    container_name: saas-proyecto-postgres-1
    environment:
      POSTGRES_DB: saas_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
    ports:
      - "5433:5432"
    volumes:
      - ./postgres-init:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d saas_db"]
      interval: 5s
      timeout: 5s
      retries: 3

  bases_de_datos:
    build: ./bases_de_datos
    ports:
      - "3001:3001"
    env_file:
      - ./bases_de_datos/.env
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  asistencia:
    build: ./asistencia
    ports:
      - "3003:3003"
    env_file:
      - ./asistencia/.env
    depends_on:
      - bases_de_datos

  nomina:
    build: ./nomina
    ports:
      - "3002:3002"
    env_file:
      - ./nomina/.env
    depends_on:
      - bases_de_datos
      - redis
    environment:
      - BASES_DE_DATOS_URL=http://bases_de_datos:3001
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis_secret

  redis:
    image: redis:alpine
    command: redis-server --requirepass redis_secret
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis_secret", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
