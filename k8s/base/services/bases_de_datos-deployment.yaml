apiVersion: apps/v1
kind: Deployment
metadata:
  name: bases-de-datos
  namespace: saas-rh
  labels:
    app: bases-de-datos
spec:
  replicas: 2
  selector:
    matchLabels:
      app: bases-de-datos
  template:
    metadata:
      labels:
        app: bases-de-datos
    spec:
      securityContext:
        runAsNonRoot: true
        fsGroup: 1001
      containers:
        - name: bases-de-datos
          image: 826726045450.dkr.ecr.us-east-1.amazonaws.com/bases-de-datos:latest
          securityContext:
            runAsUser: 1001
            runAsGroup: 1001
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          env:
            - name: NODE_ENV
              value: production
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: host
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: password
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: database
            - name: PORT
              value: "3000"
            - name: CORS_ORIGIN
              value: "https://app.humanosisu.com,https://api.humanosisu.com"
            - name: AWS_REGION
              value: "us-east-1"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-secret
                  key: access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-secret
                  key: secret_access_key
          startupProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 30 # Allow up to 2.5 minutes for startup
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
