#!/bin/bash

# Ejemplo de uso del sistema de auditor√≠a HR SaaS
# Este script demuestra diferentes formas de ejecutar las auditor√≠as

set -e

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

print_header() {
    echo -e "${PURPLE}$1${NC}"
}

print_info() {
    echo -e "${BLUE}$1${NC}"
}

print_success() {
    echo -e "${GREEN}$1${NC}"
}

print_warning() {
    echo -e "${YELLOW}$1${NC}"
}

print_header "üîç HR SaaS Audit System - Ejemplos de Uso"
echo "=================================================="

# Verificar que estamos en el directorio correcto
if [ ! -f "package.json" ]; then
    echo "‚ùå Error: Este script debe ejecutarse desde la ra√≠z del proyecto"
    exit 1
fi

print_info "üìÅ Directorio actual: $(pwd)"
print_info "üì¶ Proyecto detectado: HR SaaS Frontend"

echo ""
print_header "üéØ Escenarios de Auditor√≠a"
echo "=================================================="

# Escenario 1: Auditor√≠a completa (recomendado para producci√≥n)
echo ""
print_header "1. Auditor√≠a Completa (Recomendado)"
print_info "Ejecuta todas las verificaciones y genera reporte consolidado"
echo "Comando: npm run audit"
echo "O: ./scripts/run-complete-audit.sh"
echo ""

# Escenario 2: Auditor√≠a r√°pida del sistema
echo ""
print_header "2. Auditor√≠a R√°pida del Sistema"
print_info "Solo verifica la arquitectura del sistema (sin base de datos)"
echo "Comando: npm run audit:quick"
echo "O: node scripts/audit-system.js"
echo ""

# Escenario 3: Auditor√≠a espec√≠fica del sistema
echo ""
print_header "3. Auditor√≠a Espec√≠fica del Sistema"
print_info "Verifica estructura, APIs, rutas, configuraci√≥n"
echo "Comando: npm run audit:system"
echo "O: node scripts/audit-system.js"
echo ""

# Escenario 4: Auditor√≠a espec√≠fica de Supabase
echo ""
print_header "4. Auditor√≠a Espec√≠fica de Supabase"
print_info "Verifica conectividad, RLS, multi-tenant, integridad"
echo "Comando: npm run audit:supabase"
print_warning "‚ö†Ô∏è  Requiere variables de entorno configuradas"
echo "O: node scripts/audit-supabase.js"
echo ""

# Escenario 5: Integraci√≥n con CI/CD
echo ""
print_header "5. Integraci√≥n con CI/CD"
print_info "Ejemplo para GitHub Actions o similar"
echo "```yaml"
echo "- name: Run System Audit"
echo "  run: |"
echo "    npm install"
echo "    npm run audit"
echo "```"
echo ""

# Escenario 6: Pre-commit hook
echo ""
print_header "6. Pre-commit Hook"
print_info "Ejecutar antes de cada commit"
echo "```bash"
echo "# En .git/hooks/pre-commit"
echo "#!/bin/bash"
echo "npm run audit:system"
echo "```"
echo ""

# Escenario 7: Verificaci√≥n de desarrollo
echo ""
print_header "7. Verificaci√≥n de Desarrollo"
print_info "Para verificar cambios durante desarrollo"
echo "```bash"
echo "# Verificar solo cambios de sistema"
echo "npm run audit:system"
echo ""
echo "# Verificar solo base de datos"
echo "npm run audit:supabase"
echo "```"
echo ""

print_header "üìä Interpretaci√≥n de Resultados"
echo "=================================================="

echo "‚úÖ PASSED: Verificaci√≥n exitosa"
echo "‚ùå FAILED: Error cr√≠tico - debe corregirse"
echo "‚ö†Ô∏è  WARNING: Problema menor - debe revisarse"
echo "‚ÑπÔ∏è  INFO: Informaci√≥n adicional"
echo ""

print_header "üìÅ Archivos de Salida"
echo "=================================================="

echo "Los reportes se guardan en:"
echo "- audit-reports/system-audit-report.json"
echo "- audit-reports/supabase-audit-report.json"
echo "- audit-reports/consolidated-audit-report.md"
echo ""

print_header "üîß Configuraci√≥n Requerida"
echo "=================================================="

echo "Variables de entorno necesarias (.env.local):"
echo "- NEXT_PUBLIC_SUPABASE_URL"
echo "- NEXT_PUBLIC_SUPABASE_ANON_KEY"
echo "- SUPABASE_SERVICE_ROLE_KEY"
echo ""

print_header "üöÄ Ejecutar Auditor√≠a Ahora"
echo "=================================================="

echo "¬øDeseas ejecutar una auditor√≠a ahora?"
echo "1. Auditor√≠a completa (recomendado)"
echo "2. Solo auditor√≠a del sistema"
echo "3. Solo auditor√≠a de Supabase"
echo "4. Salir"
echo ""

read -p "Selecciona una opci√≥n (1-4): " choice

case $choice in
    1)
        print_info "üöÄ Ejecutando auditor√≠a completa..."
        npm run audit
        ;;
    2)
        print_info "üöÄ Ejecutando auditor√≠a del sistema..."
        npm run audit:system
        ;;
    3)
        print_info "üöÄ Ejecutando auditor√≠a de Supabase..."
        print_warning "‚ö†Ô∏è  Aseg√∫rate de tener las variables de entorno configuradas"
        npm run audit:supabase
        ;;
    4)
        print_info "üëã ¬°Hasta luego!"
        exit 0
        ;;
    *)
        print_warning "‚ùå Opci√≥n inv√°lida"
        exit 1
        ;;
esac

print_success "‚úÖ Ejemplo completado. Revisa los reportes generados." 