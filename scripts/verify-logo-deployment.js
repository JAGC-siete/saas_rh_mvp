#!/usr/bin/env node

/**
 * Script para verificar que el logo se est√° desplegando correctamente en Railway
 * 
 * Este script verifica:
 * 1. Que el logo existe en /public
 * 2. Que la ruta est√° correctamente configurada
 * 3. Que el archivo es accesible
 */

const fs = require('fs');
const path = require('path');

console.log('üîç Verificando configuraci√≥n del logo para Railway + Cloudflare + Supabase...\n');

// 1. Verificar que el logo existe en /public
const logoPath = path.join(process.cwd(), 'public', 'logo-humano-sisu.png');
if (fs.existsSync(logoPath)) {
  const stats = fs.statSync(logoPath);
  const fileSizeInKB = Math.round(stats.size / 1024);
  console.log(`‚úÖ Logo encontrado en /public/logo-humano-sisu.png`);
  console.log(`   Tama√±o: ${fileSizeInKB} KB`);
  console.log(`   √öltima modificaci√≥n: ${stats.mtime.toLocaleDateString()}`);
} else {
  console.error('‚ùå Logo NO encontrado en /public/logo-humano-sisu.png');
  process.exit(1);
}

// 2. Verificar que la ruta est√° correctamente referenciada en el c√≥digo
const landingFile = path.join(process.cwd(), 'pages', 'landing.tsx');
const dashboardFile = path.join(process.cwd(), 'components', 'DashboardLayout.tsx');

let logoReferences = 0;

if (fs.existsSync(landingFile)) {
  const landingContent = fs.readFileSync(landingFile, 'utf8');
  if (landingContent.includes('/logo-humano-sisu.png')) {
    console.log('‚úÖ Logo referenciado en pages/landing.tsx');
    logoReferences++;
  } else {
    console.log('‚ö†Ô∏è  Logo NO referenciado en pages/landing.tsx');
  }
}

if (fs.existsSync(dashboardFile)) {
  const dashboardContent = fs.readFileSync(dashboardFile, 'utf8');
  if (dashboardContent.includes('/logo-humano-sisu.png')) {
    console.log('‚úÖ Logo referenciado en components/DashboardLayout.tsx');
    logoReferences++;
  } else {
    console.log('‚ö†Ô∏è  Logo NO referenciado en components/DashboardLayout.tsx');
  }
}

// 3. Verificar configuraci√≥n de Next.js
const nextConfigFile = path.join(process.cwd(), 'next.config.js');
if (fs.existsSync(nextConfigFile)) {
  const nextConfigContent = fs.readFileSync(nextConfigFile, 'utf8');
  if (nextConfigContent.includes('output: \'standalone\'')) {
    console.log('‚úÖ Next.js configurado para Railway (output: standalone)');
  } else {
    console.log('‚ö†Ô∏è  Next.js NO configurado para Railway');
  }
} else {
  console.log('‚ö†Ô∏è  next.config.js no encontrado');
}

// 4. Verificar package.json para scripts de build
const packageJsonFile = path.join(process.cwd(), 'package.json');
if (fs.existsSync(packageJsonFile)) {
  const packageJson = JSON.parse(fs.readFileSync(packageJsonFile, 'utf8'));
  if (packageJson.scripts && packageJson.scripts.build) {
    console.log('‚úÖ Script de build encontrado en package.json');
  } else {
    console.log('‚ö†Ô∏è  Script de build NO encontrado en package.json');
  }
}

console.log('\nüìã Checklist de despliegue:');
console.log('1. ‚úÖ Logo en /public/logo-humano-sisu.png');
console.log(`2. ‚úÖ Logo referenciado en ${logoReferences} archivos`);
console.log('3. ‚úÖ Next.js configurado para Railway');
console.log('4. ‚úÖ Script de build disponible');

console.log('\nüöÄ Para verificar el despliegue:');
console.log('1. Haz push a GitHub');
console.log('2. Railway har√° el deploy autom√°ticamente');
console.log('3. Verifica: https://humanosisu.net/logo-humano-sisu.png');
console.log('4. Si se ve el logo ‚Üí despliegue exitoso');
console.log('5. Si no se ve ‚Üí verificar que est√© en /public en el momento del build');

console.log('\nüí° Recordatorio:');
console.log('- El logo debe estar en /public (no en Supabase Storage)');
console.log('- La ruta debe ser /logo-humano-sisu.png (desde la ra√≠z del dominio)');
console.log('- Cloudflare solo cachea lo que Railway sirva');

if (logoReferences === 0) {
  console.log('\n‚ùå PROBLEMA: El logo no est√° referenciado en ning√∫n archivo');
  process.exit(1);
} else {
  console.log('\n‚úÖ Configuraci√≥n del logo correcta para Railway + Cloudflare + Supabase');
}
